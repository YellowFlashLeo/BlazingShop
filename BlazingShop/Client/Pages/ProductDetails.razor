@page "/product/{id:int}"
@inject IProductService _productService
@inject ILocalStorageService _localStorage
@inject IToastService _toastService
@inject ICartService _cartService


@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class="views">
        <i class="oi oi-eye"></i>@product.Views.ToString("0##")
    </div>

    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title"/>
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            <p>@product.Description</p>
            @if(product.Variants != null && product.Variants.Count > 1)
            {
                <div class="form-group">
                    <select class="form-control" @bind="currentTypeId">
                        @foreach (var variant in product.Variants)
                        {
                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                        }
                    </select>
                </div>
            }

            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">@GetSelectedVariant().OriginalPrice</h6>
                }
                <h4 class="price">
                    $@GetSelectedVariant().Price
                </h4>
            }
            <button class="btn btn-primary" @onclick="AddToCart"><i class="oi oi-cart">&nbsp;&nbsp;&nbsp;Add to Cart</i></button>
        </div>
    </div>
}
@code {

    // Main idea is here we get single product with list of variants
    // product has its unique id which is then used to get variants according to it id
    // for example movie matrix has id 4, and there are 3 productVariants with ProductId = 4
    // Each of those 3 productVariants also references unique ProductTypeID, which is then used to get ProductType.Name
    // For example Product Variant with ProductId =4 (matrix) has ProductTypeId =5 , which name is Stream

    // currentTypeID will be value resulting from chosing options from SelectBox
    // so if user chose Matrix, and productType.Name Stream than ProductTypeId is 5 , hence currentTypeId value is 5
    [Parameter]
    public int Id { get; set; }

    private Product product = null;
    private string message;
    private int currentTypeId = 1;

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";

        var result = await _productService.GetProductById(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
         
            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);

        return variant;
    }

    private async Task AddToCart()
    {
        await _cartService.AddToCart(GetSelectedVariant());
    }

}
